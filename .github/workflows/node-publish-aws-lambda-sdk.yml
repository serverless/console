# @serverless/aws-lambda-otel-extensiom@{version} tags only
name: "Node: Publish @serverless/aws-lambda-sdk"

on:
  push:
    tags:
      - "@serverless/aws-lambda-sdk@[0-9]+.[0-9]+.[0-9]+"

jobs:
  publishNewVersion:
    name: Publish new version
    runs-on: ubuntu-latest
    env:
      # It'll work with secrets.GITHUB_TOKEN (which is provided by GitHub unconditionally)
      # Still then release author would be "github-actions". It's better if it's dedicated repo bot
      GITHUB_TOKEN: ${{ secrets.USER_GITHUB_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Retrieve ~/.npm from cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-v16-${{ runner.os }}-refs/heads/main-${{ hashFiles('node/**package*.json') }}
          restore-keys: npm-v16-${{ runner.os }}-refs/heads/main-

      - name: Retrieve node_modules from cache
        id: cacheNodeModules
        uses: actions/cache@v2
        with:
          path: node/node_modules
          key: node-modules-v16-${{ runner.os }}-refs/heads/main-${{ hashFiles('node/package.json') }}
          restore-keys: node-modules-v16-${{ runner.os }}-refs/heads/main-
      - name: Retrieve packages/aws-lambda-sdk/node_modules from cache
        id: cacheAwsLambdaSdkNodeModules
        uses: actions/cache@v2
        with:
          path: node/packages/aws-lambda-sdk/node_modules
          key: packages/aws-lambda-sdk/node-modules-v16-${{ runner.os }}-refs/heads/main-${{ hashFiles('node/packages/aws-lambda-sdk/package.json') }}
          restore-keys: packages/aws-lambda-sdk/node-modules-v16-${{ runner.os }}-refs/heads/main-

      - name: Install Node.js and npm
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
          registry-url: https://registry.npmjs.org

      - name: Install main project dependencies
        if: steps.cacheNodeModules.outputs.cache-hit != 'true'
        run: |
          cd node
          npm update --save-dev --no-save
      - name: Install packages/aws-lambda-sdk dependencies
        if: steps.cacheAwsLambdaSdkNodeModules.outputs.cache-hit != 'true'
        run: |
          cd node/packages/aws-lambda-sdk
          npm install

      - name: Build distributables
        run: |
          cd node/packages/aws-lambda-sdk
          npm run build

      - name: Publish new version
        # Note: Setting NODE_AUTH_TOKEN as job|workspace wide env var won't work
        #       as it appears actions/setup-node sets own value
        env:
          # serverless-main npm user auth token
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cd node/packages/aws-lambda-sdk
          npm publish

      - name: Publish release notes
        run: |
          cd node/packages/aws-lambda-sdk
          TAG=${GITHUB_REF:10}
          npx github-release-from-cc-changelog $TAG

      - name: Publish layers (dev)
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.OPEN_DEV_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.OPEN_DEV_AWS_SECRET_ACCESS_KEY }}
        run: |
          TEMP_ARRAY=($(echo $GITHUB_REF | tr "@" "\n"))
          VERSION=${TEMP_ARRAY[@]: -1}
          cd node
          ./scripts/publish-extension-layers.js \
            --bucket-name sls-dev-layers-registry \
            --layer-basename sls-sdk-node \
            --version $VERSION \
            --layer-filename packages/aws-lambda-sdk/dist/extension.internal.zip

      - name: Publish layers (prod)
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.OPEN_PROD_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.OPEN_PROD_AWS_SECRET_ACCESS_KEY }}
        run: |
          TEMP_ARRAY=($(echo $GITHUB_REF | tr "@" "\n"))
          VERSION=${TEMP_ARRAY[@]: -1}
          TAG=${GITHUB_REF:10}
          cd node
          ./scripts/publish-extension-layers.js \
            --bucket-name sls-layers-registry \
            --layer-basename sls-sdk-node \
            --version $VERSION \
            --layer-filename packages/aws-lambda-sdk/dist/extension.internal.zip \
            --github-tag $TAG
